name: Java CI with Gradle

on:
  workflow_dispatch:
  pull_request:

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: clean assemble

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Running tests
        uses: gradle/gradle-build-action@v3
        with:
          arguments: clean test

      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  build:
    runs-on: ubuntu-latest
    name: Build backend
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Compile project
        uses: gradle/gradle-build-action@v3
        with:
          arguments: clean build

#  build-image:
#    name: Build Docker image
#    runs-on: ubuntu-latest
#    needs: [build]
#    steps:
#      - name: Setup JDK
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: 'corretto'
#
##      - name: Extract project version
##        id: extract_version
##        run: |
##          cd book-network
##          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build & Push to DockerHub
#        uses: docker/build-push-action@v5
#        with:
#          context: book-network
#          file: docker/backend/Dockerfile
#          push: true
#          platforms: linux/amd64
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:latest
#          build-args: |
#            PROFILE=dev
#            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}