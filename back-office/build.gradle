plugins {
    id 'jacoco'

}

dependencies {
    implementation(project(':amqp'),
        project(':api'),
        'org.springframework.boot:spring-boot-starter-amqp',
        'org.springframework.boot:spring-boot-starter-data-jpa',
        'org.springframework.boot:spring-boot-starter-validation',
        'org.springframework.boot:spring-boot-starter-data-redis',
        'redis.clients:jedis',
        'org.liquibase:liquibase-core',
        "org.springdoc:springdoc-openapi-ui:${openApiVersion}",
        "org.mapstruct:mapstruct:${mapstructVersion}",
        'org.postgresql:postgresql',
        'org.springframework.boot:spring-boot-starter-actuator')

    annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")

    testImplementation("org.testcontainers:testcontainers:${testContainersVersion}",
        "org.testcontainers:spock:${testContainersVersion}",
        "org.testcontainers:postgresql:${testContainersVersion}",
        'org.testcontainers:rabbitmq:1.16.3',
        "com.jupiter-tools:spring-test-redis:0.1")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
        xml.destination file("${buildDir}/reports/jacoco.xml")
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}