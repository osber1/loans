plugins {
    id 'groovy'
    id 'checkstyle'
    id 'codenarc'
    alias(libs.plugins.spring.dependency)
    alias(libs.plugins.spotbugs)
    alias(libs.plugins.sonarqube)
    alias(libs.plugins.errorprone)
    alias(libs.plugins.dependency.check)
}

apply from: 'config/error-prone/rules.gradle'

allprojects {
    group = 'io.osvaldas'
    version = '1.0-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    repositories {
        mavenCentral()
    }
}

sonar {
    properties {
        property 'sonar.projectName', 'loans'
        property "sonar.projectKey", "osber1_loans"
        property "sonar.organization", "osber1"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.binaries", "**/*"
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'groovy'
    apply plugin: 'checkstyle'
    apply plugin: 'codenarc'
    apply plugin: 'com.github.spotbugs'
    apply plugin: 'org.sonarqube'
    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'org.owasp.dependencycheck'

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.boot:spring-boot-dependencies:3.4.0'
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.4'
        }
    }

    spotbugs {
        excludeFilter = file("${rootDir}/config/spotbugs/exclude.xml")
    }

    dependencies {
        errorprone(
            libs.error.prone,
            libs.error.prone.picnic.support,
            libs.error.prone.picnic.refaster
        )

        implementation(
            libs.lombok,
            libs.spring.boot.starter.web,
            libs.spring.boot.starter.bootstrap,
            libs.spring.boot.starter.validation,
            libs.logstash
        )

        compileOnly(
            libs.lombok
        )

        annotationProcessor(
            libs.lombok,
            libs.spring.boot.configuration.processor
        )

        testImplementation(
            libs.spring.boot.starter.test
        )
    }

    tasks.withType(JavaCompile).configureEach {
        options.errorprone {
            disableWarningsInGeneratedCode = true
            String enabledRules = enabled_error_prone_rules.join(',')
            String disabledRules = disabled_error_prone_rules.join('|')
            errorproneArgs.addAll(
                "-XepPatchChecks:Refaster,$enabledRules",
                '-XepPatchLocation:IN_PLACE',
                "-XepOpt:Refaster:NamePattern=^(?!.*(?:($disabledRules))).*\$"
            )
        }
    }
}