plugins {
    id 'io.spring.dependency-management' version '1.1.4'
    id 'groovy'
    id 'checkstyle'
    id 'codenarc'
    id 'com.github.spotbugs' version '6.0.4'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'net.ltgt.errorprone' version '3.1.0'
    id 'org.owasp.dependencycheck' version '9.0.4'
}

apply from: 'gradle/dependencies.gradle'
apply from: 'config/error-prone/rules.gradle'

allprojects {
    group = 'io.osvaldas'
    version = '1.0-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_17

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'groovy'
    apply plugin: 'checkstyle'
    apply plugin: 'codenarc'
    apply plugin: 'com.github.spotbugs'
    apply plugin: 'org.sonarqube'
    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'org.owasp.dependencycheck'

    dependencyManagement {
        imports {
            mavenBom libs.springBootDependencies
            mavenBom libs.springBootCloud
        }
    }

    spotbugs {
        excludeFilter = file("${rootDir}/config/spotbugs/exclude.xml")
    }

    dependencies {
        errorprone(
            libs.errorProne,
            libs.errorPronePicnicSupport,
            libs.errorPronePicnicRefaster
        )

        implementation(
            libs.lombok,
            libs.springBootStarterWeb,
            libs.springBootStarterBootstrap,
            libs.springBootStarterValidation,
            libs.logstash
        )

        compileOnly(
            libs.lombok
        )

        annotationProcessor(
            libs.lombok,
            libs.springBootConfigurationProcessor
        )

        testImplementation(
            libs.springBootStarterTest
        )
    }

    tasks.withType(JavaCompile).configureEach {
        options.errorprone {
            disableWarningsInGeneratedCode = true
            String enabledRules = enabled_error_prone_rules.join(',')
            String disabledRules = disabled_error_prone_rules.join('|')
            errorproneArgs.addAll(
                "-XepPatchChecks:Refaster,$enabledRules",
                '-XepPatchLocation:IN_PLACE',
                "-XepOpt:Refaster:NamePattern=^(?!.*(?:($disabledRules))).*\$"
            )
        }
    }
}