version: '3.5'

services:
  redis:
    container_name: redis
    image: redis:7.0.8-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    hostname: redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "5123:8081"
    depends_on:
      - redis
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:15.2-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: loans
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.20
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

  maildev:
    container_name: mail-service
    image: maildev/maildev:2.0.5
    ports:
      - "1080:1080"
      - "1025:1025"
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.9.11-management-alpine
    environment:
      RABBITMQ_NODENAME: "rabbit@staticrabbit"
    extra_hosts:
      - "staticrabbit:127.0.0.1"
    volumes:
      - ./infra_config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./infra_config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped

  vault:
    container_name: vault
    image: hashicorp/vault:1.12
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: 'super-secret-token'
    cap_add:
      - IPC_LOCK
    volumes:
      - vault:/vault/data
      - vault:/etc/vault/logs
    ports:
      - "8200:8200"
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.42.0
    volumes:
      - ./infra_config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:9.3.6
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./infra_config/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./infra_config/grafana/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    depends_on:
      - prometheus
    restart: unless-stopped

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.6.1
    volumes:
      - ./infra_config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    restart: unless-stopped

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    environment:
      node.name: elasticsearch
      discovery.type: single-node
    volumes:
      - ./infra_config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: unless-stopped

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.6.1
    volumes:
      - ./infra_config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./infra_config/logstash/pipeline:/usr/share/logstash/pipeline
      - ./logs:/logs
    ports:
      - "9600:9600"
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  postgres:
  pgadmin:
  vault:
  esdata:
