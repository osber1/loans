ext {
    versions = [
        springBoot             : '2.7.4',
        springCloud            : '2021.0.5',
        groovy                 : '3.0.15',
        lombok                 : '1.18.26',
        openApi                : '1.6.13',
        mapstruct              : '1.5.2.Final',
        spock                  : '2.1-groovy-3.0',
        lombokMapstructBindings: '0.2.0',
        testContainers         : '1.17.6',
        awaitility             : '4.2.0',
        greenmail              : '1.6.13',
        feign                  : '3.1.5',
        wiremock               : '3.1.5',
        cucumber               : '6.10.4',
        restAssured            : '4.5.1',
        guice                  : '5.1.0',
        reflections            : '0.10.2',
        snakeyaml              : '2.0',
        javaFaker              : '1.0.2'
    ]

    libs = [
        springBootDependencies          : "org.springframework.boot:spring-boot-dependencies:${versions.springBoot}",
        springBootCloud                 : "org.springframework.cloud:spring-cloud-dependencies:${versions.springCloud}",
        groovy                          : "org.codehaus.groovy:groovy-all:${versions.groovy}",
        spockCore                       : "org.spockframework:spock-core:${versions.spock}",
        spockSpring                     : "org.spockframework:spock-spring:${versions.spock}",
        springBootStarterWeb            : 'org.springframework.boot:spring-boot-starter-web',
        springBootStarterTest           : 'org.springframework.boot:spring-boot-starter-test',
        springBootStarterAmqp           : 'org.springframework.boot:spring-boot-starter-amqp',
        springBootStarterMail           : 'org.springframework.boot:spring-boot-starter-mail',
        springBootStarterDataJpa        : 'org.springframework.boot:spring-boot-starter-data-jpa',
        springDataEnvers                : 'org.springframework.data:spring-data-envers',
        springBootStarterValidation     : 'org.springframework.boot:spring-boot-starter-validation',
        springBootStarterActuator       : 'org.springframework.boot:spring-boot-starter-actuator',
        springBootStarterBootstrap      : 'org.springframework.cloud:spring-cloud-starter-bootstrap',
        springBootStarterDataRedis      : 'org.springframework.boot:spring-boot-starter-data-redis',
        springBootConfigurationProcessor: 'org.springframework.boot:spring-boot-configuration-processor',
        feign                           : "org.springframework.cloud:spring-cloud-starter-openfeign:${versions.feign}",
        openApi                         : "org.springdoc:springdoc-openapi-ui:${versions.openApi}",
        prometheus                      : 'io.micrometer:micrometer-registry-prometheus',
        liquibaseCore                   : 'org.liquibase:liquibase-core',
        postgresql                      : 'org.postgresql:postgresql',
        vault                           : 'org.springframework.cloud:spring-cloud-starter-vault-config',
        lombok                          : "org.projectlombok:lombok:${versions.lombok}",
        mapstruct                       : "org.mapstruct:mapstruct:${versions.mapstruct}",
        mapstructProcessor              : "org.mapstruct:mapstruct-processor:${versions.mapstruct}",
        testcontainers                  : "org.testcontainers:testcontainers:${versions.testContainers}",
        testcontainersSpock             : "org.testcontainers:spock:${versions.testContainers}",
        testcontainersPostgresql        : "org.testcontainers:postgresql:${versions.testContainers}",
        testcontainersRabbitmq          : "org.testcontainers:rabbitmq:${versions.testContainers}",
        testcontainersVault             : "org.testcontainers:vault:${versions.testContainers}",
        springTestRedis                 : "com.jupiter-tools:spring-test-redis:0.1",
        greenmail                       : "com.icegreen:greenmail:${versions.greenmail}",
        awaitility                      : "org.awaitility:awaitility:${versions.awaitility}",
        wiremock                        : "org.springframework.cloud:spring-cloud-contract-wiremock:${versions.wiremock}",
        jacksonDatatypeJsr310           : 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310',
        jpamodelgen                     : 'org.hibernate:hibernate-jpamodelgen',
        cucumberGroovy                  : "io.cucumber:cucumber-groovy:${versions.cucumber}",
        cucumberJunit                   : "io.cucumber:cucumber-junit:${versions.cucumber}",
        restAssured                     : "io.rest-assured:rest-assured:${versions.restAssured}",
        guice                           : "com.google.inject:guice:${versions.guice}",
        reflections                     : "org.reflections:reflections:${versions.reflections}",
        snakeyaml                       : "org.yaml:snakeyaml:${versions.snakeyaml}",
        javaFaker                       : "com.github.javafaker:javafaker:${versions.javaFaker}"
    ]
}
