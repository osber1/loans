ext {
    versions = [
        springBoot               : '3.1.5',
        springCloud              : '2022.0.4',
        springBootCloudStubRunner: '4.0.4',
        openApi                  : '1.7.0',
        mapstruct                : '1.5.5.Final',
        spock                    : '2.4-M1-groovy-4.0',
        lombokMapstructBindings  : '0.2.0',
        greenmail                : '2.0.1',
        feign                    : '4.0.4',
        logstash                 : '7.4',
        cucumber                 : '7.14.0',
        javaFaker                : '2.0.2',
        shedlock                 : '5.9.1',
        errorProne               : '2.22.0',
        errorPronePicnic         : '0.14.0'
    ]

    libs = [
        springBootDependencies          : "org.springframework.boot:spring-boot-dependencies:${versions.springBoot}",
        springBootCloud                 : "org.springframework.cloud:spring-cloud-dependencies:${versions.springCloud}",
        springBootCloudStubRunner       : "org.springframework.cloud:spring-cloud-starter-contract-stub-runner:${versions.springBootCloudStubRunner}",
        groovy                          : 'org.apache.groovy:groovy',
        groovyJson                      : 'org.apache.groovy:groovy-json',
        spockCore                       : "org.spockframework:spock-core:${versions.spock}",
        spockSpring                     : "org.spockframework:spock-spring:${versions.spock}",
        springBootStarterWeb            : 'org.springframework.boot:spring-boot-starter-web',
        springBootStarterTest           : 'org.springframework.boot:spring-boot-starter-test',
        springBootStarterAmqp           : 'org.springframework.boot:spring-boot-starter-amqp',
        springBootStarterMail           : 'org.springframework.boot:spring-boot-starter-mail',
        springBootStarterDataJpa        : 'org.springframework.boot:spring-boot-starter-data-jpa',
        springDataEnvers                : 'org.springframework.data:spring-data-envers',
        springBootStarterValidation     : 'org.springframework.boot:spring-boot-starter-validation',
        springBootStarterActuator       : 'org.springframework.boot:spring-boot-starter-actuator',
        springBootStarterBootstrap      : 'org.springframework.cloud:spring-cloud-starter-bootstrap',
        springBootStarterDataRedis      : 'org.springframework.boot:spring-boot-starter-data-redis',
        springBootConfigurationProcessor: 'org.springframework.boot:spring-boot-configuration-processor',
        springBootTestcontainers        : 'org.springframework.boot:spring-boot-testcontainers',
        feign                           : "org.springframework.cloud:spring-cloud-starter-openfeign:${versions.feign}",
        logstash                        : "net.logstash.logback:logstash-logback-encoder:${versions.logstash}",
        openApi                         : "org.springdoc:springdoc-openapi-ui:${versions.openApi}",
        prometheus                      : 'io.micrometer:micrometer-registry-prometheus',
        liquibaseCore                   : 'org.liquibase:liquibase-core',
        postgresql                      : 'org.postgresql:postgresql',
        vault                           : 'org.springframework.cloud:spring-cloud-starter-vault-config',
        lombok                          : 'org.projectlombok:lombok',
        mapstruct                       : "org.mapstruct:mapstruct:${versions.mapstruct}",
        mapstructProcessor              : "org.mapstruct:mapstruct-processor:${versions.mapstruct}",
        testcontainersSpock             : 'org.testcontainers:spock',
        testcontainersPostgresql        : 'org.testcontainers:postgresql',
        testcontainersRabbitmq          : 'org.testcontainers:rabbitmq',
        testcontainersVault             : 'org.testcontainers:vault',
        greenmail                       : "com.icegreen:greenmail:${versions.greenmail}",
        awaitility                      : 'org.awaitility:awaitility',
        jacksonDatatypeJsr310           : 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310',
        jpamodelgen                     : 'org.hibernate.orm:hibernate-jpamodelgen',
        cucumberJava                    : "io.cucumber:cucumber-java:${versions.cucumber}",
        cucumberJunit                   : "io.cucumber:cucumber-junit:${versions.cucumber}",
        restAssured                     : 'io.rest-assured:rest-assured',
        javaFaker                       : "net.datafaker:datafaker:${versions.javaFaker}",
        shedlockSpring                  : "net.javacrumbs.shedlock:shedlock-spring:${versions.shedlock}",
        shedlockProvider                : "net.javacrumbs.shedlock:shedlock-provider-jdbc-template:${versions.shedlock}",
        errorProne                      : "com.google.errorprone:error_prone_core:${versions.errorProne}",
        errorPronePicnicSupport         : "tech.picnic.error-prone-support:error-prone-contrib:${versions.errorPronePicnic}",
        errorPronePicnicRefaster        : "tech.picnic.error-prone-support:refaster-runner:${versions.errorPronePicnic}"
    ]
}
