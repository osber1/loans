plugins {
    id 'jacoco'
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.jib)
}

build {
    dependsOn(tasks.jibDockerBuild)
    dependsOn(tasks.jib)
}

jib {
    to {
        image = "osvasldas97/${name}"
        tags = [version, "${version}"]
    }
    jib.to.image "osvasldas97/${name}:${version}"
}

dependencies {
    implementation(
        project(':amqp'),
        project(':api'),
        libs.spring.boot.starter.amqp,
        libs.spring.boot.starter.mail,
        libs.spring.boot.starter.actuator,
        libs.prometheus,
        libs.vault
    )

    testImplementation(
        libs.groovy,
        libs.groovy.json,
        libs.spock.core,
        libs.spock.spring,
        libs.spring.boot.testcontainers,
        libs.testcontainers.spock,
        libs.testcontainers.rabbitmq,
        libs.testcontainers.vault,
        libs.greenmail,
        libs.awaitility
    )
}

check {
    dependsOn(tasks.jacocoTestCoverageVerification)
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = '0.7'.toBigDecimal()
            }
        }
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
